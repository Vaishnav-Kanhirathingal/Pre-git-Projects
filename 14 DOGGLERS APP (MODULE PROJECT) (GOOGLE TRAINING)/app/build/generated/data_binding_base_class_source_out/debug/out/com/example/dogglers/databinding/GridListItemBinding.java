// Generated by view binder compiler. Do not edit!
package com.example.dogglers.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.example.dogglers.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GridListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final AppCompatTextView dogAgeTextView;

  @NonNull
  public final AppCompatTextView dogHobbiesTextView;

  @NonNull
  public final AppCompatImageView dogImage;

  @NonNull
  public final AppCompatTextView dogNameTextView;

  private GridListItemBinding(@NonNull MaterialCardView rootView,
      @NonNull AppCompatTextView dogAgeTextView, @NonNull AppCompatTextView dogHobbiesTextView,
      @NonNull AppCompatImageView dogImage, @NonNull AppCompatTextView dogNameTextView) {
    this.rootView = rootView;
    this.dogAgeTextView = dogAgeTextView;
    this.dogHobbiesTextView = dogHobbiesTextView;
    this.dogImage = dogImage;
    this.dogNameTextView = dogNameTextView;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GridListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GridListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.grid_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GridListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dog_age_text_view;
      AppCompatTextView dogAgeTextView = rootView.findViewById(id);
      if (dogAgeTextView == null) {
        break missingId;
      }

      id = R.id.dog_hobbies_text_view;
      AppCompatTextView dogHobbiesTextView = rootView.findViewById(id);
      if (dogHobbiesTextView == null) {
        break missingId;
      }

      id = R.id.dog_image;
      AppCompatImageView dogImage = rootView.findViewById(id);
      if (dogImage == null) {
        break missingId;
      }

      id = R.id.dog_name_text_view;
      AppCompatTextView dogNameTextView = rootView.findViewById(id);
      if (dogNameTextView == null) {
        break missingId;
      }

      return new GridListItemBinding((MaterialCardView) rootView, dogAgeTextView,
          dogHobbiesTextView, dogImage, dogNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
